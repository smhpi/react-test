{"version":3,"sources":["routes/index.js"],"names":["express","require","router","Router","generateToken","sendToken","passport","config","request","route","post","req","res","url","oauth","oauth_callback","consumer_key","twitterAuth","consumerKey","consumer_secret","consumerSecret","err","r","body","send","message","e","jsonStr","replace","JSON","parse","next","token","query","oauth_token","form","oauth_verifier","bodyString","parsedBody","oauth_token_secret","user_id","authenticate","session","user","auth","id","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["var express = require('express');\r\nvar router = express.Router();\r\nvar { generateToken, sendToken } = require('../utils/token.utils');\r\nvar passport = require('passport');\r\nvar config = require('../config');\r\nvar request = require('request');\r\nrequire('../passport')();\r\n\r\nrouter.route('/auth/twitter/reverse')\r\n    .post(function(req, res) {\r\n        request.post({\r\n            url: 'https://api.twitter.com/oauth/request_token',\r\n            oauth: {\r\n                oauth_callback: \"http%3A%2F%2Flocalhost%3A3000%2Ftwitter-callback\",\r\n                consumer_key: config.twitterAuth.consumerKey,\r\n                consumer_secret: config.twitterAuth.consumerSecret\r\n            }\r\n        }, function (err, r, body) {\r\n            if (err) {\r\n                return res.send(500, { message: e.message });\r\n            }\r\n            var jsonStr = '{ \"' + body.replace(/&/g, '\", \"').replace(/=/g, '\": \"') + '\"}';\r\n            res.send(JSON.parse(jsonStr));\r\n        });\r\n    });\r\n\r\nrouter.route('/auth/twitter')\r\n    .post((req, res, next) => {\r\n        request.post({\r\n            url: `https://api.twitter.com/oauth/access_token?oauth_verifier`,\r\n            oauth: {\r\n                consumer_key: config.twitterAuth.consumerKey,\r\n                consumer_secret: config.twitterAuth.consumerSecret,\r\n                token: req.query.oauth_token\r\n            },\r\n            form: { oauth_verifier: req.query.oauth_verifier }\r\n        }, function (err, r, body) {\r\n            if (err) {\r\n                return res.send(500, { message: err.message });\r\n            }\r\n\r\n            const bodyString = '{ \"' + body.replace(/&/g, '\", \"').replace(/=/g, '\": \"') + '\"}';\r\n            const parsedBody = JSON.parse(bodyString);\r\n\r\n            req.body['oauth_token'] = parsedBody.oauth_token;\r\n            req.body['oauth_token_secret'] = parsedBody.oauth_token_secret;\r\n            req.body['user_id'] = parsedBody.user_id;\r\n\r\n            next();\r\n        });\r\n    }, passport.authenticate('twitter-token', {session: false}), function(req, res, next) {\r\n        if (!req.user) {\r\n            return res.send(401, 'User Not Authenticated');\r\n        }\r\n        req.auth = {\r\n            id: req.user.id\r\n        };\r\n\r\n        return next();\r\n    }, generateToken, sendToken);\r\n\r\nrouter.route('/auth/facebook')\r\n    .post(passport.authenticate('facebook-token', {session: false}), function(req, res, next) {\r\n        if (!req.user) {\r\n            return res.send(401, 'User Not Authenticated');\r\n        }\r\n        req.auth = {\r\n            id: req.user.id\r\n        };\r\n\r\n        next();\r\n    }, generateToken, sendToken);\r\n\r\nrouter.route('/auth/google')\r\n    .post(passport.authenticate('google-token', {session: false}), function(req, res, next) {\r\n        if (!req.user) {\r\n            return res.send(401, 'User Not Authenticated');\r\n        }\r\n        req.auth = {\r\n            id: req.user.id\r\n        };\r\n\r\n        next();\r\n    }, generateToken, sendToken);\r\n\r\nmodule.exports = router;"]}