{"version":3,"sources":["passport.js"],"names":["require","passport","User","model","FacebookTokenStrategy","GoogleTokenStrategy","Strategy","config","module","exports","use","clientID","facebookAuth","clientSecret","accessToken","refreshToken","profile","done","upsertFbUser","err","user","googleAuth","upsertGoogleUser"],"mappings":"AAAA;;AAEAA,QAAQ,YAAR;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,OAAOF,QAAQ,UAAR,EAAoBG,KAApB,CAA0B,MAA1B,CAAX;AACA,IAAIC,wBAAwBJ,QAAQ,yBAAR,CAA5B;AACA,IAAIK,sBAAsBL,QAAQ,uBAAR,EAAiCM,QAA3D;AACA,IAAIC,SAASP,QAAQ,UAAR,CAAb;;AAEAQ,OAAOC,OAAP,GAAiB,YAAY;;AAEzBR,aAASS,GAAT,CAAa,IAAIN,qBAAJ,CAA0B;AAC/BO,kBAAUJ,OAAOK,YAAP,CAAoBD,QADC;AAE/BE,sBAAcN,OAAOK,YAAP,CAAoBC;AAFH,KAA1B,EAIT,UAAUC,WAAV,EAAuBC,YAAvB,EAAqCC,OAArC,EAA8CC,IAA9C,EAAoD;AAChDf,aAAKgB,YAAL,CAAkBJ,WAAlB,EAA+BC,YAA/B,EAA6CC,OAA7C,EAAsD,UAASG,GAAT,EAAcC,IAAd,EAAoB;AACtE,mBAAOH,KAAKE,GAAL,EAAUC,IAAV,CAAP;AACH,SAFD;AAGH,KARQ,CAAb;;AAUAnB,aAASS,GAAT,CAAa,IAAIL,mBAAJ,CAAwB;AAC7BM,kBAAUJ,OAAOc,UAAP,CAAkBV,QADC;AAE7BE,sBAAcN,OAAOc,UAAP,CAAkBR;AAFH,KAAxB,EAIT,UAAUC,WAAV,EAAuBC,YAAvB,EAAqCC,OAArC,EAA8CC,IAA9C,EAAoD;AAChDf,aAAKoB,gBAAL,CAAsBR,WAAtB,EAAmCC,YAAnC,EAAiDC,OAAjD,EAA0D,UAASG,GAAT,EAAcC,IAAd,EAAoB;AAC1E,mBAAOH,KAAKE,GAAL,EAAUC,IAAV,CAAP;AACH,SAFD;AAGH,KARQ,CAAb;AASH,CArBD","file":"passport.js","sourcesContent":["'use strict';\r\n\r\nrequire('./mongoose')();\r\nvar passport = require('passport');\r\nvar User = require('mongoose').model('User');\r\nvar FacebookTokenStrategy = require('passport-facebook-token');\r\nvar GoogleTokenStrategy = require('passport-google-token').Strategy;\r\nvar config = require('./config');\r\n\r\nmodule.exports = function () {\r\n\r\n    passport.use(new FacebookTokenStrategy({\r\n            clientID: config.facebookAuth.clientID,\r\n            clientSecret: config.facebookAuth.clientSecret\r\n        },\r\n        function (accessToken, refreshToken, profile, done) {\r\n            User.upsertFbUser(accessToken, refreshToken, profile, function(err, user) {\r\n                return done(err, user);\r\n            });\r\n        }));\r\n\r\n    passport.use(new GoogleTokenStrategy({\r\n            clientID: config.googleAuth.clientID,\r\n            clientSecret: config.googleAuth.clientSecret\r\n        },\r\n        function (accessToken, refreshToken, profile, done) {\r\n            User.upsertGoogleUser(accessToken, refreshToken, profile, function(err, user) {\r\n                return done(err, user);\r\n            });\r\n        }));\r\n};"]}