{"version":3,"sources":["passport.js"],"names":["require","passport","TwitterTokenStrategy","User","model","FacebookTokenStrategy","GoogleTokenStrategy","Strategy","config","module","exports","use","consumerKey","twitterAuth","consumerSecret","includeEmail","token","tokenSecret","profile","done","upsertTwitterUser","err","user","clientID","facebookAuth","clientSecret","accessToken","refreshToken","upsertFbUser","googleAuth","upsertGoogleUser"],"mappings":"AAAA;;AAEAA,QAAQ,YAAR;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,uBAAuBF,QAAQ,wBAAR,CAA3B;AACA,IAAIG,OAAOH,QAAQ,UAAR,EAAoBI,KAApB,CAA0B,MAA1B,CAAX;AACA,IAAIC,wBAAwBL,QAAQ,yBAAR,CAA5B;AACA,IAAIM,sBAAsBN,QAAQ,uBAAR,EAAiCO,QAA3D;AACA,IAAIC,SAASR,QAAQ,UAAR,CAAb;;AAEAS,OAAOC,OAAP,GAAiB,YAAY;;AAEzBT,aAASU,GAAT,CAAa,IAAIT,oBAAJ,CAAyB;AAC9BU,qBAAaJ,OAAOK,WAAP,CAAmBD,WADF;AAE9BE,wBAAgBN,OAAOK,WAAP,CAAmBC,cAFL;AAG9BC,sBAAc;AAHgB,KAAzB,EAKT,UAAUC,KAAV,EAAiBC,WAAjB,EAA8BC,OAA9B,EAAuCC,IAAvC,EAA6C;AACzChB,aAAKiB,iBAAL,CAAuBJ,KAAvB,EAA8BC,WAA9B,EAA2CC,OAA3C,EAAoD,UAASG,GAAT,EAAcC,IAAd,EAAoB;AACpE,mBAAOH,KAAKE,GAAL,EAAUC,IAAV,CAAP;AACH,SAFD;AAGH,KATQ,CAAb;;AAWArB,aAASU,GAAT,CAAa,IAAIN,qBAAJ,CAA0B;AAC/BkB,kBAAUf,OAAOgB,YAAP,CAAoBD,QADC;AAE/BE,sBAAcjB,OAAOgB,YAAP,CAAoBC;AAFH,KAA1B,EAIT,UAAUC,WAAV,EAAuBC,YAAvB,EAAqCT,OAArC,EAA8CC,IAA9C,EAAoD;AAChDhB,aAAKyB,YAAL,CAAkBF,WAAlB,EAA+BC,YAA/B,EAA6CT,OAA7C,EAAsD,UAASG,GAAT,EAAcC,IAAd,EAAoB;AACtE,mBAAOH,KAAKE,GAAL,EAAUC,IAAV,CAAP;AACH,SAFD;AAGH,KARQ,CAAb;;AAUArB,aAASU,GAAT,CAAa,IAAIL,mBAAJ,CAAwB;AAC7BiB,kBAAUf,OAAOqB,UAAP,CAAkBN,QADC;AAE7BE,sBAAcjB,OAAOqB,UAAP,CAAkBJ;AAFH,KAAxB,EAIT,UAAUC,WAAV,EAAuBC,YAAvB,EAAqCT,OAArC,EAA8CC,IAA9C,EAAoD;AAChDhB,aAAK2B,gBAAL,CAAsBJ,WAAtB,EAAmCC,YAAnC,EAAiDT,OAAjD,EAA0D,UAASG,GAAT,EAAcC,IAAd,EAAoB;AAC1E,mBAAOH,KAAKE,GAAL,EAAUC,IAAV,CAAP;AACH,SAFD;AAGH,KARQ,CAAb;AASH,CAhCD","file":"passport.js","sourcesContent":["'use strict';\r\n\r\nrequire('./mongoose')();\r\nvar passport = require('passport');\r\nvar TwitterTokenStrategy = require('passport-twitter-token');\r\nvar User = require('mongoose').model('User');\r\nvar FacebookTokenStrategy = require('passport-facebook-token');\r\nvar GoogleTokenStrategy = require('passport-google-token').Strategy;\r\nvar config = require('./config');\r\n\r\nmodule.exports = function () {\r\n\r\n    passport.use(new TwitterTokenStrategy({\r\n            consumerKey: config.twitterAuth.consumerKey,\r\n            consumerSecret: config.twitterAuth.consumerSecret,\r\n            includeEmail: true\r\n        },\r\n        function (token, tokenSecret, profile, done) {\r\n            User.upsertTwitterUser(token, tokenSecret, profile, function(err, user) {\r\n                return done(err, user);\r\n            });\r\n        }));\r\n\r\n    passport.use(new FacebookTokenStrategy({\r\n            clientID: config.facebookAuth.clientID,\r\n            clientSecret: config.facebookAuth.clientSecret\r\n        },\r\n        function (accessToken, refreshToken, profile, done) {\r\n            User.upsertFbUser(accessToken, refreshToken, profile, function(err, user) {\r\n                return done(err, user);\r\n            });\r\n        }));\r\n\r\n    passport.use(new GoogleTokenStrategy({\r\n            clientID: config.googleAuth.clientID,\r\n            clientSecret: config.googleAuth.clientSecret\r\n        },\r\n        function (accessToken, refreshToken, profile, done) {\r\n            User.upsertGoogleUser(accessToken, refreshToken, profile, function(err, user) {\r\n                return done(err, user);\r\n            });\r\n        }));\r\n};"]}